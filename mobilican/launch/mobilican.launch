<?xml version="1.0" encoding="UTF-8"?>

<!-- robot top-level launch -->

<launch>

    <arg name="robot" default="komodo2"/>

    <arg name="gazebo" default="false" doc="execute robot inside gazebo sim"/>
    <arg name="world" default="worlds/empty.world"/>
    <arg name="pose_x" default="0.0"/>
    <arg name="pose_y" default="0.0"/>
    <arg name="pose_z" default="0.0"/>
    <arg name="pose_a" default="0.0" />

    <arg name="gmapping" default="false"/>
    <arg name="hector_mapping" default="false"/>
    <arg name="hector_slam" default="false"/>
    <arg name="amcl" default="false"/>
    <arg name="have_map" default="false" doc="set to true to use pre-saved map"/>
    <arg name="map" default="map.yaml" doc="pre-saved map path"/>
    <arg name="move_base" default="false"/>

    <arg name="joy_dev" default="/dev/input/js0"/>
    <arg name="joy_profile" default="xbox"/>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>
    <include file="$(find mobilican_control)/$(arg robot)/launch/$(arg robot)_controllers.launch" />

    <include file="$(find espeak_ros)/launch/espeak_ros.launch" />

    <group unless="$(arg hector_slam)">
        <group unless="$(arg hector_slam)">
            <param name="mobile_base_controller/enable_odom_tf" value="true" />
        </group>
    </group>

    <group if="$(arg hector_mapping)">
        <include file="$(find mobilican_navigation)/launch/hector_mapping.launch" />
        <param name="mobile_base_controller/enable_odom_tf" value="false" />
    </group>

    <group if="$(arg have_map)">
        <node name="map_server" pkg="map_server" type="map_server" args="$(arg map)" />
    </group>

    <!--if no one publish map-odom tf, load static tf-->
    <group unless="$(arg gmapping)">
        <group unless="$(arg hector_slam)">
            <group unless="$(arg amcl)">
                <node pkg="tf" type="static_transform_publisher" name="map_odom_broadcaster" args="0 0 0 0 0 0 /map /odom 20" />
            </group>
        </group>
    </group>

    <group if="$(arg gmapping)">
        <include file="$(find mobilican_navigation)/launch/gmapping.launch" />
    </group>

    <group if="$(arg hector_slam)">
        <include file="$(find mobilican_navigation)/launch/hector_slam.launch" />
        <param name="mobile_base_controller/enable_odom_tf" value="false" />
    </group>

    <group if="$(arg amcl)">
        <include file="$(find mobilican_navigation)/launch/amcl.launch">
            <arg name="initial_pose_x" value="$(arg pose_x)"/>
            <arg name="initial_pose_y" value="$(arg pose_y)"/>
            <arg name="initial_pose_a" value="$(arg pose_a)"/>
        </include>
    </group>

    <group if="$(arg move_base)">
        <include file="$(find mobilican_navigation)/launch/move_base.launch" />
        <rosparam file="$(find mobilican_navigation)/config/$(arg robot)/move_base_params.yaml" command="load" ns="move_base"/>
        <rosparam file="$(find mobilican_navigation)/config/$(arg robot)/costmap_common_params.yaml" command="load" ns="move_base/global_costmap" />
        <rosparam file="$(find mobilican_navigation)/config/$(arg robot)/costmap_common_params.yaml" command="load" ns="move_base/local_costmap" />
        <rosparam file="$(find mobilican_navigation)/config/$(arg robot)/local_costmap_params.yaml" command="load" ns="move_base/local_costmap" />
        <rosparam file="$(find mobilican_navigation)/config/$(arg robot)/global_costmap_params.yaml" command="load" ns="move_base/global_costmap"/>
    </group>

    <!--load simulation stuff-->
    <group if="$(arg gazebo)">
        <env name="GAZEBO_MODEL_PATH" value="$(find mobilican_gazebo)/models:$(optenv GAZEBO_MODEL_PATH)"/>
        <include file="$(find gazebo_ros)/launch/empty_world.launch">
            <arg name="world_name" value="$(arg world)"/>
            <arg name="gui" value="true"/>
        </include>
        <node name="$(arg robot)_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf 
        -param robot_description 
        -model $(arg robot) 
        -x $(arg pose_x) 
        -y $(arg pose_y) 
        -z $(arg pose_z) 
        -Y $(arg pose_a)" />
        <param name="robot_description" command="$(find xacro)/xacro '$(find mobilican_description)/$(arg robot)/urdf/$(arg robot)_gazebo.xacro' --inorder" />
    </group>

    <!--load hardware stuff-->
    <group unless="$(arg gazebo)">
        <include file="$(find mobilican_hw)/launch/mobilican_hw.launch" />
        <include file="$(find mobilican_hw)/launch/$(arg robot)_hw.launch" />
        <param name="robot_description" command="$(find xacro)/xacro '$(find mobilican_description)/$(arg robot)/urdf/$(arg robot).xacro' --inorder" />
    </group>

</launch>
